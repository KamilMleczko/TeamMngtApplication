// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamMngt.Data;

#nullable disable

namespace TeamMngt.Migrations
{
    [DbContext(typeof(TeamMngtContext))]
    [Migration("20240526215432_UpdateProjekt3")]
    partial class UpdateProjekt3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("TeamMngt.Models.ModulProjektu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataRozpoczecia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjektId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProjektId");

                    b.ToTable("ModulProjektu");
                });

            modelBuilder.Entity("TeamMngt.Models.Pracownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stanowsiko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZespolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ZespolId");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("TeamMngt.Models.Projekt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataRozpoczecia")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("TeamMngt.Models.Zadanie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CzasWykonania")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModulProjektuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PracownikId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModulProjektuId");

                    b.HasIndex("PracownikId");

                    b.ToTable("Zadanie");
                });

            modelBuilder.Entity("TeamMngt.Models.Zespol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModulProjektuId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModulProjektuId");

                    b.ToTable("Zespol");
                });

            modelBuilder.Entity("TeamMngt.Models.ModulProjektu", b =>
                {
                    b.HasOne("TeamMngt.Models.Projekt", "Projekt")
                        .WithMany("ModulyProjektu")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Projekt");
                });

            modelBuilder.Entity("TeamMngt.Models.Pracownik", b =>
                {
                    b.HasOne("TeamMngt.Models.Zespol", "Zespol")
                        .WithMany("Pracownicy")
                        .HasForeignKey("ZespolId");

                    b.Navigation("Zespol");
                });

            modelBuilder.Entity("TeamMngt.Models.Zadanie", b =>
                {
                    b.HasOne("TeamMngt.Models.ModulProjektu", "ModulProjektu")
                        .WithMany("Zadania")
                        .HasForeignKey("ModulProjektuId");

                    b.HasOne("TeamMngt.Models.Pracownik", "Pracownik")
                        .WithMany("Zadania")
                        .HasForeignKey("PracownikId");

                    b.Navigation("ModulProjektu");

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("TeamMngt.Models.Zespol", b =>
                {
                    b.HasOne("TeamMngt.Models.ModulProjektu", "ModulProjektu")
                        .WithMany("Zespoly")
                        .HasForeignKey("ModulProjektuId");

                    b.Navigation("ModulProjektu");
                });

            modelBuilder.Entity("TeamMngt.Models.ModulProjektu", b =>
                {
                    b.Navigation("Zadania");

                    b.Navigation("Zespoly");
                });

            modelBuilder.Entity("TeamMngt.Models.Pracownik", b =>
                {
                    b.Navigation("Zadania");
                });

            modelBuilder.Entity("TeamMngt.Models.Projekt", b =>
                {
                    b.Navigation("ModulyProjektu");
                });

            modelBuilder.Entity("TeamMngt.Models.Zespol", b =>
                {
                    b.Navigation("Pracownicy");
                });
#pragma warning restore 612, 618
        }
    }
}
